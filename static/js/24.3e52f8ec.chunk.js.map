{"version":3,"sources":["components/constants/states-chart-options.js","components/states.js","components/footer.js"],"names":["chartOptions","title","text","chart","type","height","series","name","data","legend","align","verticalAlign","layout","x","y","floating","tooltip","formatter","formatNumber","this","format","credits","enabled","xAxis","tickInterval","range","yAxis","min","tickAmount","titles","0","1","2","React","memo","useState","options","setOptions","totalOptions","setTotalOptions","queryStringParams","queryString","parse","window","location","search","model","useEffect","axios","get","then","response","each","v","state","max","ttOptions","cloneDeep","predictions","map","result","date","dailyCofirmed","delta","confirmed","Date","push","orderBy","topStates","times","i","option","slice","drawTopCharts","className","Helmet","content","style","animationDelay","index","key","highcharts","Highcharts","props","t","useTranslation","href","target","rel","justifyContent"],"mappings":"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","file":"static/js/24.3e52f8ec.chunk.js","sourcesContent":["import {formatNumber} from '../../utils/commonfunctions';\n\nimport {format} from 'date-fns';\n\nexport const chartOptions = {\n  title: {\n    text: 'COVID-19 Predictions',\n  },\n  chart: {\n    type: 'spline',\n    height: 600,\n  },\n  series: [\n    {\n      name: 'AN',\n      data: [],\n    },\n  ],\n  legend: {\n    align: 'right',\n    verticalAlign: 'top',\n    layout: 'vertical',\n    x: -10,\n    y: 50,\n    floating: true,\n  },\n  tooltip: {\n    formatter: function () {\n      return (\n        '<b>' +\n        formatNumber(this.y) +\n        '</b><br/>' +\n        format(this.x, 'dd MMM, yyyy')\n      );\n    },\n  },\n  credits: {\n    enabled: false,\n  },\n  xAxis: {\n    type: 'datetime',\n    tickInterval: 30 * 24 * 3600 * 1000,\n    range: 12 * 30 * 24 * 3600 * 1000,\n  },\n  yAxis: {\n    title: {\n      text: 'Daily Reported Cases',\n    },\n    min: 0,\n    tickAmount: 10,\n  },\n};\n\nexport const titles = {\n  0: \"Top Seven States\",\n  1: \"Second Highest Seven States\",\n  2: \"Third Highest Seven States\"\n}\n","import {chartOptions, titles} from './constants/states-chart-options';\nimport Footer from './footer';\n\nimport axios from 'axios';\nimport HighchartsReact from 'highcharts-react-official';\nimport Highcharts from 'highcharts/highstock';\nimport {map, each, orderBy, cloneDeep, times} from 'lodash';\nimport React, {useState, useEffect} from 'react';\nimport queryString from 'query-string';\nimport {Helmet} from 'react-helmet';\n\nfunction States() {\n  const [options, setOptions] = useState([]);\n  const [totalOptions, setTotalOptions] = useState({});\n  const queryStringParams = queryString.parse(window.location.search);\n  const model = queryStringParams && queryStringParams.model;\n\n  useEffect(() => {\n    axios\n      .get(`https://vics-core.github.io/covid-api/predictions.json`)\n      .then((response) => {\n        updateSeriesData(response.data);\n      });\n\n    function updateSeriesData(data) {\n      each(data, function (v, state) {\n        let max=0;\n        if (state === 'TT'){\n          const ttOptions = cloneDeep(chartOptions);\n          const predictions = map(v, function (result, date) {\n            const dailyCofirmed = result.delta.confirmed || 0;\n            max = max > dailyCofirmed ? max : dailyCofirmed;\n            return {x: new Date(date), y: dailyCofirmed};\n          });\n          ttOptions.title.text = 'Aggregated Prediction';\n          ttOptions.series = {name: state, data: predictions, max: max};\n          setTotalOptions(ttOptions);\n        }\n        const predictions = map(v, function (result, date) {\n          const dailyCofirmed = result.delta.confirmed || 0;\n          max = max > dailyCofirmed ? max : dailyCofirmed;\n          return {x: new Date(date), y: dailyCofirmed};\n        });\n        chartOptions.series.push({name: state, data: predictions, max: max});\n      });\n      drawTopCharts();\n    }\n\n    function drawTopCharts(){\n      chartOptions.series=orderBy(chartOptions.series, 'max', 'desc');\n      const topStates = [];\n      times(3, function(i){\n        const option = cloneDeep(chartOptions);\n        option.title.text = titles[i];\n        option.series = chartOptions.series.slice(i*7,(i+1)*7);\n        topStates.push(option)\n      })\n      setOptions(topStates);\n    }\n  }, []);\n\n  return (\n    <div className=\"States\">\n      <Helmet>\n        <title>States Predictions - seva.ml</title>\n        <meta name=\"title\" content={`States Predictions - seva.ml`} />\n        <meta\n          name=\"description\"\n          content=\"Charts to show state wise prediction.\"\n        />\n      </Helmet>\n\n      <div className=\"header fadeInUp\" style={{animationDelay: '0.3s'}}>\n        <h1>States Predictions</h1>\n      </div>\n      <div className=\"charts\">\n        {options.map((option, index) => {\n          return (\n            <div className=\"chart\" key={index}>\n              <HighchartsReact\n                options={option}\n                highcharts={Highcharts}\n              ></HighchartsReact>\n            </div>\n          );\n        })}\n      </div>\n      <HighchartsReact options={totalOptions} highcharts={Highcharts}></HighchartsReact>\n      <div>Model: {model}</div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default React.memo(States);\n","import React from 'react';\nimport * as Icon from 'react-feather';\nimport {useTranslation} from 'react-i18next';\n\nfunction Footer(props) {\n  const {t} = useTranslation();\n\n  return (\n    <footer className=\"fadeInUp\" style={{animationDelay: '2s'}}>\n      <h3>{t('Look forward and drive!')}</h3>\n      <div>\n        <a\n          href=\"https://www.facebook.com/indiacovidseva\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"facebook\"\n          style={{justifyContent: 'center'}}\n        >\n          <Icon.Facebook />\n        </a>\n\n        <a\n          href=\"https://twitter.com/indiacovidseva\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"twitter\"\n          style={{justifyContent: 'center'}}\n        >\n          <Icon.Twitter />\n        </a>\n\n        <a\n          href=\"https://www.linkedin.com/company/indiacovidseva\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"linkedin\"\n          style={{justifyContent: 'center'}}\n        >\n          <Icon.Linkedin />\n        </a>\n\n        <a\n          href=\"https://github.com/VICS-CORE/covid19india-react\"\n          className=\"github\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Icon.GitHub />\n        </a>\n      </div>\n\n      <h5>Built on covid19india.org</h5>\n    </footer>\n  );\n}\n\nexport default React.memo(Footer);\n"],"sourceRoot":""}