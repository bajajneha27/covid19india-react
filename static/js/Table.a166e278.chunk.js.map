{"version":3,"sources":["../node_modules/react-use/esm/useLocalStorage.js","../../src/utils/errors.ts","../../src/utils/common.ts","../../src/types/types-internal.ts","../../src/utils/plugins.ts","../../src/core/scope.ts","../../src/core/finalize.ts","../../src/core/proxy.ts","../../src/core/immerClass.ts","../../src/immer.ts","../../src/utils/env.ts","components/table.js","../node_modules/react-use/esm/createBreakpoint.js"],"names":["noop","useLocalStorage","key","initialValue","options","isClient","Error","deserializer","raw","value","JSON","parse","_a","useState","serializer","String","stringify","localStorageValue","localStorage","getItem","setItem","state","setState","set","useCallback","valOrFunc","newState","remove","removeItem","undefined","die","error","args","msg","length","join","isDraft","DRAFT_STATE","isDraftable","proto","Object","getPrototypeOf","prototype","Array","isArray","DRAFTABLE","constructor","isMap","isSet","each","obj","iter","enumerableOnly","getArchtype","keys","ownKeys","forEach","entry","index","thing","type_","has","prop","hasOwnProperty","call","get","is","x","y","target","hasMap","Map","hasSet","Set","latest","copy_","base_","shallowCopy","base","invokeGetters","slice","clone","create","desc","getOwnPropertyDescriptor","enumerable","defineProperty","writable","configurable","freeze","deep","isFrozen","add","clear","delete","dontMutateFrozenCollections","getPlugin","pluginKey","plugin","plugins","getCurrentScope","currentScope","usePatchesInScope","scope","patchListener","patches_","inversePatches_","patchListener_","revokeScope","leaveScope","drafts_","revokeDraft","parent_","enterScope","immer","immer_","canAutoFreeze_","unfinalizedDrafts_","draft","revoke_","revoked_","processResult","result","baseDraft","isReplaced","useProxies_","willFinalizeES5_","modified_","finalize","maybeFreeze","generateReplacementPatches_","NOTHING","rootScope","path","childValue","finalizeProperty","scope_","finalized_","draft_","generatePatches_","parentState","targetObject","rootPath","res","assigned_","concat","propOrOldValue","t","autoFreeze_","peek","Reflect","markChangedProxy","copy","prepareCopy","createProxy","parent","proxyMap_","proxySet_","isManual_","traps","objectTraps","arrayTraps","Proxy","revocable","revoke","proxy","createES5Proxy_","push","hasSymbol","Symbol","hasProxies","iterator","getOwnPropertySymbols","getOwnPropertyNames","drafts","baseValue","deleteProperty","owner","setPrototypeOf","fn","arguments","apply","this","e","config","useProxies","setUseProxies","autoFreeze","setAutoFreeze","produce","bind","produceWithPatches","recipe","defaultBase","self","_this","hasError","Promise","then","arg1","arg2","patches","inversePatches","_this2","p","ip","createDraft","finishDraft","applyPatches","i","patch","op","applyPatchesImpl","applyPatches_","Row","lazy","useBreakpoint","createBreakpoint","S","StateHeaderCell","React","memo","handleSort","sortData","statistic","breakpoint","useTranslation","className","onClick","sortColumn","classnames","invert","isAscending","size","title","capitalize","prevProps","currProps","equal","FineprintTop","Fragment","data","regionHighlighted","setRegionHighlighted","setSortData","handleSortClick","draftSortData","sortingFunction","stateCodeA","stateCodeB","statisticA","getStatistic","statisticB","localeCompare","useTrail","transform","opacity","wobbly","trail","tableElement","useRef","isVisible","useIsVisible","div","style","PRIMARY_STATISTICS","map","filter","stateCode","total","confirmed","sort","a","b","ref","districtName","breakpoints","laptopL","laptop","tablet","screen","setScreen","useEffect","setSideScreen","window","innerWidth","addEventListener","removeEventListener","sortedBreakpoints","useMemo","entries","reduce","acc","name","width"],"mappings":"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","file":"static/js/Table.a166e278.chunk.js","sourcesContent":["/* eslint-disable */\nimport { useState, useCallback } from 'react';\nimport { isClient } from './util';\nvar noop = function () { };\nvar useLocalStorage = function (key, initialValue, options) {\n    if (!isClient) {\n        return [initialValue, noop, noop];\n    }\n    if (!key) {\n        throw new Error('useLocalStorage key may not be falsy');\n    }\n    var deserializer = options ? (options.raw ? function (value) { return value; } : options.deserializer) : JSON.parse;\n    var _a = useState(function () {\n        try {\n            var serializer = options ? (options.raw ? String : options.serializer) : JSON.stringify;\n            var localStorageValue = localStorage.getItem(key);\n            if (localStorageValue !== null) {\n                return deserializer(localStorageValue);\n            }\n            else {\n                initialValue && localStorage.setItem(key, serializer(initialValue));\n                return initialValue;\n            }\n        }\n        catch (_a) {\n            // If user is in private mode or has storage restriction\n            // localStorage can throw. JSON.parse and JSON.stringify\n            // can throw, too.\n            return initialValue;\n        }\n    }), state = _a[0], setState = _a[1];\n    var set = useCallback(function (valOrFunc) {\n        try {\n            var newState = typeof valOrFunc === 'function' ? valOrFunc(state) : valOrFunc;\n            if (typeof newState === 'undefined')\n                return;\n            var value = void 0;\n            if (options)\n                if (options.raw)\n                    if (typeof newState === 'string')\n                        value = newState;\n                    else\n                        value = JSON.stringify(newState);\n                else if (options.serializer)\n                    value = options.serializer(newState);\n                else\n                    value = JSON.stringify(newState);\n            else\n                value = JSON.stringify(newState);\n            localStorage.setItem(key, value);\n            setState(deserializer(value));\n        }\n        catch (_a) {\n            // If user is in private mode or has storage restriction\n            // localStorage can throw. Also JSON.stringify can throw.\n        }\n    }, [key, setState]);\n    var remove = useCallback(function () {\n        try {\n            localStorage.removeItem(key);\n            setState(undefined);\n        }\n        catch (_a) {\n            // If user is in private mode or has storage restriction\n            // localStorage can throw.\n        }\n    }, [key, setState]);\n    return [state, set, remove];\n};\nexport default useLocalStorage;\n","const errors = {\n\t0: \"Illegal state\",\n\t1: \"Immer drafts cannot have computed properties\",\n\t2: \"This object has been frozen and should not be mutated\",\n\t3(data: any) {\n\t\treturn (\n\t\t\t\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \" +\n\t\t\tdata\n\t\t)\n\t},\n\t4: \"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",\n\t5: \"Immer forbids circular references\",\n\t6: \"The first or second argument to `produce` must be a function\",\n\t7: \"The third argument to `produce` must be a function or undefined\",\n\t8: \"First argument to `createDraft` must be a plain object, an array, or an immerable object\",\n\t9: \"First argument to `finishDraft` must be a draft returned by `createDraft`\",\n\t10: \"The given draft is already finalized\",\n\t11: \"Object.defineProperty() cannot be used on an Immer draft\",\n\t12: \"Object.setPrototypeOf() cannot be used on an Immer draft\",\n\t13: \"Immer only supports deleting array indices\",\n\t14: \"Immer only supports setting array indices and the 'length' property\",\n\t15(path: string) {\n\t\treturn \"Cannot apply patch, path doesn't resolve: \" + path\n\t},\n\t16: 'Sets cannot have \"replace\" patches.',\n\t17(op: string) {\n\t\treturn \"Unsupported patch operation: \" + op\n\t},\n\t18(plugin: string) {\n\t\treturn `The plugin for '${plugin}' has not been loaded into Immer. To enable the plugin, import and call \\`enable${plugin}()\\` when initializing your application.`\n\t},\n\t19(plugin: string) {\n\t\treturn \"plugin not loaded: \" + plugin\n\t},\n\t20: \"Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available\"\n} as const\n\nexport function die(error: keyof typeof errors, ...args: any[]): never {\n\tif (__DEV__) {\n\t\tconst e = errors[error]\n\t\tconst msg = !e\n\t\t\t? \"unknown error nr: \" + error\n\t\t\t: typeof e === \"function\"\n\t\t\t? e.apply(null, args as any)\n\t\t\t: e\n\t\tthrow new Error(`[Immer] ${msg}`)\n\t}\n\tthrow new Error(\n\t\t`[Immer] minified error nr: ${error}${\n\t\t\targs.length ? \" \" + args.join(\",\") : \"\"\n\t\t}. Find the full error at: https://bit.ly/3cXEKWf`\n\t)\n}\n","import {\n\tDRAFT_STATE,\n\tDRAFTABLE,\n\thasSet,\n\tObjectish,\n\tDrafted,\n\tAnyObject,\n\tAnyArray,\n\tAnyMap,\n\tAnySet,\n\tImmerState,\n\thasMap,\n\tArchtypeObject,\n\tArchtypeArray,\n\tArchtypeMap,\n\tArchtypeSet,\n\tdie\n} from \"../internal\"\n\n/** Returns true if the given value is an Immer draft */\n/*#__PURE__*/\nexport function isDraft(value: any): boolean {\n\treturn !!value && !!value[DRAFT_STATE]\n}\n\n/** Returns true if the given value can be drafted by Immer */\n/*#__PURE__*/\nexport function isDraftable(value: any): boolean {\n\tif (!value) return false\n\treturn (\n\t\tisPlainObject(value) ||\n\t\tArray.isArray(value) ||\n\t\t!!value[DRAFTABLE] ||\n\t\t!!value.constructor[DRAFTABLE] ||\n\t\tisMap(value) ||\n\t\tisSet(value)\n\t)\n}\n\n/*#__PURE__*/\nexport function isPlainObject(value: any): boolean {\n\tif (!value || typeof value !== \"object\") return false\n\tconst proto = Object.getPrototypeOf(value)\n\treturn !proto || proto === Object.prototype\n}\n\n/** Get the underlying object that is represented by the given draft */\n/*#__PURE__*/\nexport function original<T>(value: T): T | undefined\nexport function original(value: Drafted<any>): any {\n\tif (value && value[DRAFT_STATE]) {\n\t\treturn value[DRAFT_STATE].base_ as any\n\t}\n\t// otherwise return undefined\n}\n\n/*#__PURE__*/\nexport const ownKeys: (target: AnyObject) => PropertyKey[] =\n\ttypeof Reflect !== \"undefined\" && Reflect.ownKeys\n\t\t? Reflect.ownKeys\n\t\t: typeof Object.getOwnPropertySymbols !== \"undefined\"\n\t\t? obj =>\n\t\t\t\tObject.getOwnPropertyNames(obj).concat(\n\t\t\t\t\tObject.getOwnPropertySymbols(obj) as any\n\t\t\t\t)\n\t\t: /* istanbul ignore next */ Object.getOwnPropertyNames\n\nexport function each<T extends Objectish>(\n\tobj: T,\n\titer: (key: string | number, value: any, source: T) => void,\n\tenumerableOnly?: boolean\n): void\nexport function each(obj: any, iter: any, enumerableOnly = false) {\n\tif (getArchtype(obj) === ArchtypeObject) {\n\t\t;(enumerableOnly ? Object.keys : ownKeys)(obj).forEach(key =>\n\t\t\titer(key, obj[key], obj)\n\t\t)\n\t} else {\n\t\tobj.forEach((entry: any, index: any) => iter(index, entry, obj))\n\t}\n}\n\n/*#__PURE__*/\nexport function getArchtype(thing: any): 0 | 1 | 2 | 3 {\n\t/* istanbul ignore next */\n\tconst state: undefined | ImmerState = thing[DRAFT_STATE]\n\treturn state\n\t\t? state.type_ > 3\n\t\t\t? state.type_ - 4 // cause Object and Array map back from 4 and 5\n\t\t\t: (state.type_ as any) // others are the same\n\t\t: Array.isArray(thing)\n\t\t? ArchtypeArray\n\t\t: isMap(thing)\n\t\t? ArchtypeMap\n\t\t: isSet(thing)\n\t\t? ArchtypeSet\n\t\t: ArchtypeObject\n}\n\n/*#__PURE__*/\nexport function has(thing: any, prop: PropertyKey): boolean {\n\treturn getArchtype(thing) === ArchtypeMap\n\t\t? thing.has(prop)\n\t\t: Object.prototype.hasOwnProperty.call(thing, prop)\n}\n\n/*#__PURE__*/\nexport function get(thing: AnyMap | AnyObject, prop: PropertyKey): any {\n\t// @ts-ignore\n\treturn getArchtype(thing) === ArchtypeMap ? thing.get(prop) : thing[prop]\n}\n\n/*#__PURE__*/\nexport function set(thing: any, propOrOldValue: PropertyKey, value: any) {\n\tconst t = getArchtype(thing)\n\tif (t === ArchtypeMap) thing.set(propOrOldValue, value)\n\telse if (t === ArchtypeSet) {\n\t\tthing.delete(propOrOldValue)\n\t\tthing.add(value)\n\t} else thing[propOrOldValue] = value\n}\n\n/*#__PURE__*/\nexport function is(x: any, y: any): boolean {\n\t// From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n\tif (x === y) {\n\t\treturn x !== 0 || 1 / x === 1 / y\n\t} else {\n\t\treturn x !== x && y !== y\n\t}\n}\n\n/*#__PURE__*/\nexport function isMap(target: any): target is AnyMap {\n\treturn hasMap && target instanceof Map\n}\n\n/*#__PURE__*/\nexport function isSet(target: any): target is AnySet {\n\treturn hasSet && target instanceof Set\n}\n/*#__PURE__*/\nexport function latest(state: ImmerState): any {\n\treturn state.copy_ || state.base_\n}\n\n/*#__PURE__*/\nexport function shallowCopy<T extends AnyObject | AnyArray>(\n\tbase: T,\n\tinvokeGetters?: boolean\n): T\nexport function shallowCopy(base: any, invokeGetters = false) {\n\tif (Array.isArray(base)) return base.slice()\n\tconst clone = Object.create(Object.getPrototypeOf(base))\n\teach(base, (key: any) => {\n\t\tif (key === DRAFT_STATE) {\n\t\t\treturn // Never copy over draft state.\n\t\t}\n\t\tconst desc = Object.getOwnPropertyDescriptor(base, key)!\n\t\tlet {value} = desc\n\t\tif (desc.get) {\n\t\t\tif (!invokeGetters) die(1)\n\t\t\tvalue = desc.get.call(base)\n\t\t}\n\t\tif (desc.enumerable) {\n\t\t\tclone[key] = value\n\t\t} else {\n\t\t\tObject.defineProperty(clone, key, {\n\t\t\t\tvalue,\n\t\t\t\twritable: true,\n\t\t\t\tconfigurable: true\n\t\t\t})\n\t\t}\n\t})\n\treturn clone\n}\n\nexport function freeze(obj: any, deep: boolean): void {\n\tif (isDraft(obj) || isFrozen(obj) || !isDraftable(obj)) return\n\tif (getArchtype(obj) > 1 /* Map or Set */) {\n\t\tobj.set = obj.add = obj.clear = obj.delete = dontMutateFrozenCollections as any\n\t}\n\tObject.freeze(obj)\n\tif (deep) each(obj, (key, value) => freeze(value, true), true)\n}\n\nfunction dontMutateFrozenCollections() {\n\tdie(2)\n}\n\nexport function isFrozen(obj: any): boolean {\n\tif (obj == null || typeof obj !== \"object\") return true\n\t// See #600, IE dies on non-objects in Object.isFrozen\n\treturn Object.isFrozen(obj)\n}\n","import {\n\tSetState,\n\tImmerScope,\n\tProxyObjectState,\n\tProxyArrayState,\n\tES5ObjectState,\n\tES5ArrayState,\n\tMapState,\n\tDRAFT_STATE\n} from \"../internal\"\n\nexport type Objectish = AnyObject | AnyArray | AnyMap | AnySet\nexport type ObjectishNoSet = AnyObject | AnyArray | AnyMap\n\nexport type AnyObject = {[key: string]: any}\nexport type AnyArray = Array<any>\nexport type AnySet = Set<any>\nexport type AnyMap = Map<any, any>\n\nexport const ArchtypeObject = 0\nexport const ArchtypeArray = 1\nexport const ArchtypeMap = 2\nexport const ArchtypeSet = 3\n\nexport const ProxyTypeProxyObject = 0\nexport const ProxyTypeProxyArray = 1\nexport const ProxyTypeES5Object = 4\nexport const ProxyTypeES5Array = 5\nexport const ProxyTypeMap = 2\nexport const ProxyTypeSet = 3\n\nexport interface ImmerBaseState {\n\tparent_?: ImmerState\n\tscope_: ImmerScope\n\tmodified_: boolean\n\tfinalized_: boolean\n\tisManual_: boolean\n}\n\nexport type ImmerState =\n\t| ProxyObjectState\n\t| ProxyArrayState\n\t| ES5ObjectState\n\t| ES5ArrayState\n\t| MapState\n\t| SetState\n\n// The _internal_ type used for drafts (not to be confused with Draft, which is public facing)\nexport type Drafted<Base = any, T extends ImmerState = ImmerState> = {\n\t[DRAFT_STATE]: T\n} & Base\n","import {\n\tImmerState,\n\tPatch,\n\tImmerScope,\n\tDrafted,\n\tAnyObject,\n\tImmerBaseState,\n\tAnyArray,\n\tAnyMap,\n\tAnySet,\n\tProxyTypeES5Array,\n\tProxyTypeES5Object,\n\tProxyTypeMap,\n\tProxyTypeSet,\n\tdie\n} from \"../internal\"\n\n/** Plugin utilities */\nconst plugins: {\n\tPatches?: {\n\t\tgeneratePatches_(\n\t\t\tstate: ImmerState,\n\t\t\tbasePath: PatchPath,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tgenerateReplacementPatches_(\n\t\t\trootState: ImmerState,\n\t\t\treplacement: any,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tapplyPatches_<T>(draft: T, patches: Patch[]): T\n\t}\n\tES5?: {\n\t\twillFinalizeES5_(scope: ImmerScope, result: any, isReplaced: boolean): void\n\t\tcreateES5Proxy_<T>(\n\t\t\tbase: T,\n\t\t\tparent?: ImmerState\n\t\t): Drafted<T, ES5ObjectState | ES5ArrayState>\n\t\tmarkChangedES5_(state: ImmerState): void\n\t}\n\tMapSet?: {\n\t\tproxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T\n\t\tproxySet_<T extends AnySet>(target: T, parent?: ImmerState): T\n\t}\n} = {}\n\ntype Plugins = typeof plugins\n\nexport function getPlugin<K extends keyof Plugins>(\n\tpluginKey: K\n): Exclude<Plugins[K], undefined> {\n\tconst plugin = plugins[pluginKey]\n\tif (!plugin) {\n\t\tdie(__DEV__ ? 18 : 19, pluginKey)\n\t}\n\t// @ts-ignore\n\treturn plugin\n}\n\nexport function loadPlugin<K extends keyof Plugins>(\n\tpluginKey: K,\n\timplementation: Plugins[K]\n): void {\n\tplugins[pluginKey] = implementation\n}\n\n/** ES5 Plugin */\n\ninterface ES5BaseState extends ImmerBaseState {\n\tfinalizing_: boolean\n\tassigned_: {[key: string]: any}\n\tparent_?: ImmerState\n\trevoked_: boolean\n}\n\nexport interface ES5ObjectState extends ES5BaseState {\n\ttype_: typeof ProxyTypeES5Object\n\tdraft_: Drafted<AnyObject, ES5ObjectState>\n\tbase_: AnyObject\n\tcopy_: AnyObject | null\n}\n\nexport interface ES5ArrayState extends ES5BaseState {\n\ttype_: typeof ProxyTypeES5Array\n\tdraft_: Drafted<AnyObject, ES5ArrayState>\n\tbase_: AnyArray\n\tcopy_: AnyArray | null\n}\n\n/** Map / Set plugin */\n\nexport interface MapState extends ImmerBaseState {\n\ttype_: typeof ProxyTypeMap\n\tcopy_: AnyMap | undefined\n\tassigned_: Map<any, boolean> | undefined\n\tbase_: AnyMap\n\trevoked_: boolean\n\tdraft_: Drafted<AnyMap, MapState>\n}\n\nexport interface SetState extends ImmerBaseState {\n\ttype_: typeof ProxyTypeSet\n\tcopy_: AnySet | undefined\n\tbase_: AnySet\n\tdrafts_: Map<any, Drafted> // maps the original value to the draft value in the new set\n\trevoked_: boolean\n\tdraft_: Drafted<AnySet, SetState>\n}\n\n/** Patches plugin */\n\nexport type PatchPath = (string | number)[]\n","import {\n\tPatch,\n\tPatchListener,\n\tDrafted,\n\tImmer,\n\tDRAFT_STATE,\n\tImmerState,\n\tProxyTypeProxyObject,\n\tProxyTypeProxyArray,\n\tgetPlugin\n} from \"../internal\"\nimport {die} from \"../utils/errors\"\n\n/** Each scope represents a `produce` call. */\n\nexport interface ImmerScope {\n\tpatches_?: Patch[]\n\tinversePatches_?: Patch[]\n\tcanAutoFreeze_: boolean\n\tdrafts_: any[]\n\tparent_?: ImmerScope\n\tpatchListener_?: PatchListener\n\timmer_: Immer\n\tunfinalizedDrafts_: number\n}\n\nlet currentScope: ImmerScope | undefined\n\nexport function getCurrentScope() {\n\tif (__DEV__ && !currentScope) die(0)\n\treturn currentScope!\n}\n\nfunction createScope(\n\tparent_: ImmerScope | undefined,\n\timmer_: Immer\n): ImmerScope {\n\treturn {\n\t\tdrafts_: [],\n\t\tparent_,\n\t\timmer_,\n\t\t// Whenever the modified draft contains a draft from another scope, we\n\t\t// need to prevent auto-freezing so the unowned draft can be finalized.\n\t\tcanAutoFreeze_: true,\n\t\tunfinalizedDrafts_: 0\n\t}\n}\n\nexport function usePatchesInScope(\n\tscope: ImmerScope,\n\tpatchListener?: PatchListener\n) {\n\tif (patchListener) {\n\t\tgetPlugin(\"Patches\") // assert we have the plugin\n\t\tscope.patches_ = []\n\t\tscope.inversePatches_ = []\n\t\tscope.patchListener_ = patchListener\n\t}\n}\n\nexport function revokeScope(scope: ImmerScope) {\n\tleaveScope(scope)\n\tscope.drafts_.forEach(revokeDraft)\n\t// @ts-ignore\n\tscope.drafts_ = null\n}\n\nexport function leaveScope(scope: ImmerScope) {\n\tif (scope === currentScope) {\n\t\tcurrentScope = scope.parent_\n\t}\n}\n\nexport function enterScope(immer: Immer) {\n\treturn (currentScope = createScope(currentScope, immer))\n}\n\nfunction revokeDraft(draft: Drafted) {\n\tconst state: ImmerState = draft[DRAFT_STATE]\n\tif (\n\t\tstate.type_ === ProxyTypeProxyObject ||\n\t\tstate.type_ === ProxyTypeProxyArray\n\t)\n\t\tstate.revoke_()\n\telse state.revoked_ = true\n}\n","import {\n\tImmerScope,\n\tDRAFT_STATE,\n\tisDraftable,\n\tNOTHING,\n\tPatchPath,\n\teach,\n\thas,\n\tfreeze,\n\tshallowCopy,\n\tImmerState,\n\tisDraft,\n\tSetState,\n\tset,\n\tis,\n\tget,\n\tProxyTypeES5Object,\n\tProxyTypeES5Array,\n\tProxyTypeSet,\n\tgetPlugin,\n\tdie,\n\trevokeScope,\n\tisFrozen\n} from \"../internal\"\n\nexport function processResult(result: any, scope: ImmerScope) {\n\tscope.unfinalizedDrafts_ = scope.drafts_.length\n\tconst baseDraft = scope.drafts_![0]\n\tconst isReplaced = result !== undefined && result !== baseDraft\n\tif (!scope.immer_.useProxies_)\n\t\tgetPlugin(\"ES5\").willFinalizeES5_(scope, result, isReplaced)\n\tif (isReplaced) {\n\t\tif (baseDraft[DRAFT_STATE].modified_) {\n\t\t\trevokeScope(scope)\n\t\t\tdie(4)\n\t\t}\n\t\tif (isDraftable(result)) {\n\t\t\t// Finalize the result in case it contains (or is) a subset of the draft.\n\t\t\tresult = finalize(scope, result)\n\t\t\tif (!scope.parent_) maybeFreeze(scope, result)\n\t\t}\n\t\tif (scope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(\n\t\t\t\tbaseDraft[DRAFT_STATE],\n\t\t\t\tresult,\n\t\t\t\tscope.patches_,\n\t\t\t\tscope.inversePatches_!\n\t\t\t)\n\t\t}\n\t} else {\n\t\t// Finalize the base draft.\n\t\tresult = finalize(scope, baseDraft, [])\n\t}\n\trevokeScope(scope)\n\tif (scope.patches_) {\n\t\tscope.patchListener_!(scope.patches_, scope.inversePatches_!)\n\t}\n\treturn result !== NOTHING ? result : undefined\n}\n\nfunction finalize(rootScope: ImmerScope, value: any, path?: PatchPath) {\n\t// Don't recurse in tho recursive data structures\n\tif (isFrozen(value)) return value\n\n\tconst state: ImmerState = value[DRAFT_STATE]\n\t// A plain object, might need freezing, might contain drafts\n\tif (!state) {\n\t\teach(\n\t\t\tvalue,\n\t\t\t(key, childValue) =>\n\t\t\t\tfinalizeProperty(rootScope, state, value, key, childValue, path),\n\t\t\ttrue // See #590, don't recurse into non-enumarable of non drafted objects\n\t\t)\n\t\treturn value\n\t}\n\t// Never finalize drafts owned by another scope.\n\tif (state.scope_ !== rootScope) return value\n\t// Unmodified draft, return the (frozen) original\n\tif (!state.modified_) {\n\t\tmaybeFreeze(rootScope, state.base_, true)\n\t\treturn state.base_\n\t}\n\t// Not finalized yet, let's do that now\n\tif (!state.finalized_) {\n\t\tstate.finalized_ = true\n\t\tstate.scope_.unfinalizedDrafts_--\n\t\tconst result =\n\t\t\t// For ES5, create a good copy from the draft first, with added keys and without deleted keys.\n\t\t\tstate.type_ === ProxyTypeES5Object || state.type_ === ProxyTypeES5Array\n\t\t\t\t? (state.copy_ = shallowCopy(state.draft_, true))\n\t\t\t\t: state.copy_\n\t\t// finalize all children of the copy\n\t\teach(result as any, (key, childValue) =>\n\t\t\tfinalizeProperty(rootScope, state, result, key, childValue, path)\n\t\t)\n\t\t// everything inside is frozen, we can freeze here\n\t\tmaybeFreeze(rootScope, result, false)\n\t\t// first time finalizing, let's create those patches\n\t\tif (path && rootScope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generatePatches_(\n\t\t\t\tstate,\n\t\t\t\tpath,\n\t\t\t\trootScope.patches_,\n\t\t\t\trootScope.inversePatches_!\n\t\t\t)\n\t\t}\n\t}\n\treturn state.copy_\n}\n\nfunction finalizeProperty(\n\trootScope: ImmerScope,\n\tparentState: undefined | ImmerState,\n\ttargetObject: any,\n\tprop: string | number,\n\tchildValue: any,\n\trootPath?: PatchPath\n) {\n\tif (__DEV__ && childValue === targetObject) die(5)\n\tif (isDraft(childValue)) {\n\t\tconst path =\n\t\t\trootPath &&\n\t\t\tparentState &&\n\t\t\tparentState!.type_ !== ProxyTypeSet && // Set objects are atomic since they have no keys.\n\t\t\t!has((parentState as Exclude<ImmerState, SetState>).assigned_!, prop) // Skip deep patches for assigned keys.\n\t\t\t\t? rootPath!.concat(prop)\n\t\t\t\t: undefined\n\t\t// Drafts owned by `scope` are finalized here.\n\t\tconst res = finalize(rootScope, childValue, path)\n\t\tset(targetObject, prop, res)\n\t\t// Drafts from another scope must prevented to be frozen\n\t\t// if we got a draft back from finalize, we're in a nested produce and shouldn't freeze\n\t\tif (isDraft(res)) {\n\t\t\trootScope.canAutoFreeze_ = false\n\t\t} else return\n\t}\n\t// Unchanged draft properties are ignored.\n\tif (parentState && is(childValue, get(parentState!.base_, prop))) {\n\t\treturn\n\t}\n\t// Search new objects for unfinalized drafts. Frozen objects should never contain drafts.\n\tif (isDraftable(childValue)) {\n\t\tif (!rootScope.immer_.autoFreeze_ && rootScope.unfinalizedDrafts_ < 1) {\n\t\t\t// optimization: if an object is not a draft, and we don't have to\n\t\t\t// deepfreeze everything, and we are sure that no drafts are left in the remaining object\n\t\t\t// cause we saw and finalized all drafts already; we can stop visiting the rest of the tree.\n\t\t\t// This benefits especially adding large data tree's without further processing.\n\t\t\t// See add-data.js perf test\n\t\t\treturn\n\t\t}\n\t\tfinalize(rootScope, childValue)\n\t\t// immer deep freezes plain objects, so if there is no parent state, we freeze as well\n\t\tif (!parentState || !parentState.scope_.parent_)\n\t\t\tmaybeFreeze(rootScope, childValue)\n\t}\n}\n\nfunction maybeFreeze(scope: ImmerScope, value: any, deep = false) {\n\tif (scope.immer_.autoFreeze_ && scope.canAutoFreeze_) {\n\t\tfreeze(value, deep)\n\t}\n}\n","\"use strict\"\nimport {\n\teach,\n\thas,\n\tis,\n\tisDraftable,\n\tshallowCopy,\n\tlatest,\n\tImmerBaseState,\n\tImmerState,\n\tDrafted,\n\tAnyObject,\n\tAnyArray,\n\tObjectish,\n\tgetCurrentScope,\n\tDRAFT_STATE,\n\tdie,\n\tcreateProxy,\n\tProxyTypeProxyObject,\n\tProxyTypeProxyArray\n} from \"../internal\"\n\ninterface ProxyBaseState extends ImmerBaseState {\n\tassigned_: {\n\t\t[property: string]: boolean\n\t}\n\tparent_?: ImmerState\n\tdrafts_?: {\n\t\t[property: string]: Drafted<any, any>\n\t}\n\trevoke_(): void\n}\n\nexport interface ProxyObjectState extends ProxyBaseState {\n\ttype_: typeof ProxyTypeProxyObject\n\tbase_: AnyObject\n\tcopy_: AnyObject | null\n\tdraft_: Drafted<AnyObject, ProxyObjectState>\n}\n\nexport interface ProxyArrayState extends ProxyBaseState {\n\ttype_: typeof ProxyTypeProxyArray\n\tbase_: AnyArray\n\tcopy_: AnyArray | null\n\tdraft_: Drafted<AnyArray, ProxyArrayState>\n}\n\ntype ProxyState = ProxyObjectState | ProxyArrayState\n\n/**\n * Returns a new draft of the `base` object.\n *\n * The second argument is the parent draft-state (used internally).\n */\nexport function createProxyProxy<T extends Objectish>(\n\tbase: T,\n\tparent?: ImmerState\n): Drafted<T, ProxyState> {\n\tconst isArray = Array.isArray(base)\n\tconst state: ProxyState = {\n\t\ttype_: isArray ? ProxyTypeProxyArray : (ProxyTypeProxyObject as any),\n\t\t// Track which produce call this is associated with.\n\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t// True for both shallow and deep changes.\n\t\tmodified_: false,\n\t\t// Used during finalization.\n\t\tfinalized_: false,\n\t\t// Track which properties have been assigned (true) or deleted (false).\n\t\tassigned_: {},\n\t\t// The parent draft state.\n\t\tparent_: parent,\n\t\t// The base state.\n\t\tbase_: base,\n\t\t// The base proxy.\n\t\tdraft_: null as any, // set below\n\t\t// Any property proxies.\n\t\tdrafts_: {},\n\t\t// The base copy with any updated values.\n\t\tcopy_: null,\n\t\t// Called by the `produce` function.\n\t\trevoke_: null as any,\n\t\tisManual_: false\n\t}\n\n\t// the traps must target something, a bit like the 'real' base.\n\t// but also, we need to be able to determine from the target what the relevant state is\n\t// (to avoid creating traps per instance to capture the state in closure,\n\t// and to avoid creating weird hidden properties as well)\n\t// So the trick is to use 'state' as the actual 'target'! (and make sure we intercept everything)\n\t// Note that in the case of an array, we put the state in an array to have better Reflect defaults ootb\n\tlet target: T = state as any\n\tlet traps: ProxyHandler<object | Array<any>> = objectTraps\n\tif (isArray) {\n\t\ttarget = [state] as any\n\t\ttraps = arrayTraps\n\t}\n\n\tconst {revoke, proxy} = Proxy.revocable(target, traps)\n\tstate.draft_ = proxy as any\n\tstate.revoke_ = revoke\n\treturn proxy as any\n}\n\n/**\n * Object drafts\n */\nconst objectTraps: ProxyHandler<ProxyState> = {\n\tget(state, prop) {\n\t\tif (prop === DRAFT_STATE) return state\n\t\tlet {drafts_: drafts} = state\n\n\t\t// Check for existing draft in unmodified state.\n\t\tif (!state.modified_ && has(drafts, prop)) {\n\t\t\treturn drafts![prop as any]\n\t\t}\n\n\t\tconst value = latest(state)[prop]\n\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\treturn value\n\t\t}\n\n\t\t// Check for existing draft in modified state.\n\t\tif (state.modified_) {\n\t\t\t// Assigned values are never drafted. This catches any drafts we created, too.\n\t\t\tif (value !== peek(state.base_, prop)) return value\n\t\t\t// Store drafts on the copy (when one exists).\n\t\t\t// @ts-ignore\n\t\t\tdrafts = state.copy_\n\t\t}\n\n\t\treturn (drafts![prop as any] = createProxy(\n\t\t\tstate.scope_.immer_,\n\t\t\tvalue,\n\t\t\tstate\n\t\t))\n\t},\n\thas(state, prop) {\n\t\treturn prop in latest(state)\n\t},\n\townKeys(state) {\n\t\treturn Reflect.ownKeys(latest(state))\n\t},\n\tset(state, prop: string /* strictly not, but helps TS */, value) {\n\t\tif (!state.modified_) {\n\t\t\tconst baseValue = peek(state.base_, prop)\n\t\t\t// Optimize based on value's truthiness. Truthy values are guaranteed to\n\t\t\t// never be undefined, so we can avoid the `in` operator. Lastly, truthy\n\t\t\t// values may be drafts, but falsy values are never drafts.\n\t\t\tconst isUnchanged = value\n\t\t\t\t? is(baseValue, value) || value === state.drafts_![prop]\n\t\t\t\t: is(baseValue, value) && prop in state.base_\n\t\t\tif (isUnchanged) return true\n\t\t\tprepareCopy(state)\n\t\t\tmarkChangedProxy(state)\n\t\t}\n\t\tstate.assigned_[prop] = true\n\t\t// @ts-ignore\n\t\tstate.copy_![prop] = value\n\t\treturn true\n\t},\n\tdeleteProperty(state, prop: string) {\n\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\tif (peek(state.base_, prop) !== undefined || prop in state.base_) {\n\t\t\tstate.assigned_[prop] = false\n\t\t\tprepareCopy(state)\n\t\t\tmarkChangedProxy(state)\n\t\t} else if (state.assigned_[prop]) {\n\t\t\t// if an originally not assigned property was deleted\n\t\t\tdelete state.assigned_[prop]\n\t\t}\n\t\t// @ts-ignore\n\t\tif (state.copy_) delete state.copy_[prop]\n\t\treturn true\n\t},\n\t// Note: We never coerce `desc.value` into an Immer draft, because we can't make\n\t// the same guarantee in ES5 mode.\n\tgetOwnPropertyDescriptor(state, prop) {\n\t\tconst owner = latest(state)\n\t\tconst desc = Reflect.getOwnPropertyDescriptor(owner, prop)\n\t\tif (desc) {\n\t\t\tdesc.writable = true\n\t\t\tdesc.configurable =\n\t\t\t\tstate.type_ !== ProxyTypeProxyArray || prop !== \"length\"\n\t\t}\n\t\treturn desc\n\t},\n\tdefineProperty() {\n\t\tdie(11)\n\t},\n\tgetPrototypeOf(state) {\n\t\treturn Object.getPrototypeOf(state.base_)\n\t},\n\tsetPrototypeOf() {\n\t\tdie(12)\n\t}\n}\n\n/**\n * Array drafts\n */\n\nconst arrayTraps: ProxyHandler<[ProxyArrayState]> = {}\neach(objectTraps, (key, fn) => {\n\t// @ts-ignore\n\tarrayTraps[key] = function() {\n\t\targuments[0] = arguments[0][0]\n\t\treturn fn.apply(this, arguments)\n\t}\n})\narrayTraps.deleteProperty = function(state, prop) {\n\tif (__DEV__ && isNaN(parseInt(prop as any))) die(13)\n\treturn objectTraps.deleteProperty!.call(this, state[0], prop)\n}\narrayTraps.set = function(state, prop, value) {\n\tif (__DEV__ && prop !== \"length\" && isNaN(parseInt(prop as any))) die(14)\n\treturn objectTraps.set!.call(this, state[0], prop, value, state[0])\n}\n\n/**\n * Map drafts\n */\n\n// Access a property without creating an Immer draft.\nfunction peek(draft: Drafted, prop: PropertyKey): any {\n\tconst state = draft[DRAFT_STATE]\n\tconst desc = Reflect.getOwnPropertyDescriptor(\n\t\tstate ? latest(state) : draft,\n\t\tprop\n\t)\n\treturn desc && desc.value\n}\n\nexport function markChangedProxy(state: ImmerState) {\n\tif (!state.modified_) {\n\t\tstate.modified_ = true\n\t\tif (\n\t\t\tstate.type_ === ProxyTypeProxyObject ||\n\t\t\tstate.type_ === ProxyTypeProxyArray\n\t\t) {\n\t\t\tconst copy = (state.copy_ = shallowCopy(state.base_))\n\t\t\teach(state.drafts_!, (key, value) => {\n\t\t\t\t// @ts-ignore\n\t\t\t\tcopy[key] = value\n\t\t\t})\n\t\t\tstate.drafts_ = undefined\n\t\t}\n\n\t\tif (state.parent_) {\n\t\t\tmarkChangedProxy(state.parent_)\n\t\t}\n\t}\n}\n\nfunction prepareCopy(state: ProxyState) {\n\tif (!state.copy_) {\n\t\tstate.copy_ = shallowCopy(state.base_)\n\t}\n}\n","import {\n\tIProduceWithPatches,\n\tIProduce,\n\tImmerState,\n\tDrafted,\n\tisDraftable,\n\tprocessResult,\n\tNOTHING,\n\tPatch,\n\tObjectish,\n\tDRAFT_STATE,\n\tDraft,\n\tPatchListener,\n\tisDraft,\n\tisMap,\n\tisSet,\n\tmarkChangedProxy,\n\tcreateProxyProxy,\n\tfreeze,\n\tgetPlugin,\n\tdie,\n\thasProxies,\n\tisMinified,\n\tenterScope,\n\trevokeScope,\n\tleaveScope,\n\tusePatchesInScope,\n\tgetCurrentScope\n} from \"../internal\"\n\ninterface ProducersFns {\n\tproduce: IProduce\n\tproduceWithPatches: IProduceWithPatches\n}\n\nexport class Immer implements ProducersFns {\n\tuseProxies_: boolean = hasProxies\n\n\tautoFreeze_: boolean = __DEV__ ? true /* istanbul ignore next */ : !isMinified\n\n\tconstructor(config?: {useProxies?: boolean; autoFreeze?: boolean}) {\n\t\tif (typeof config?.useProxies === \"boolean\")\n\t\t\tthis.setUseProxies(config!.useProxies)\n\t\tif (typeof config?.autoFreeze === \"boolean\")\n\t\t\tthis.setAutoFreeze(config!.autoFreeze)\n\t\tthis.produce = this.produce.bind(this)\n\t\tthis.produceWithPatches = this.produceWithPatches.bind(this)\n\t}\n\n\t/**\n\t * The `produce` function takes a value and a \"recipe function\" (whose\n\t * return value often depends on the base state). The recipe function is\n\t * free to mutate its first argument however it wants. All mutations are\n\t * only ever applied to a __copy__ of the base state.\n\t *\n\t * Pass only a function to create a \"curried producer\" which relieves you\n\t * from passing the recipe function every time.\n\t *\n\t * Only plain objects and arrays are made mutable. All other objects are\n\t * considered uncopyable.\n\t *\n\t * Note: This function is __bound__ to its `Immer` instance.\n\t *\n\t * @param {any} base - the initial state\n\t * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n\t * @param {Function} patchListener - optional function that will be called with all the patches produced here\n\t * @returns {any} a new state, or the initial state if nothing was modified\n\t */\n\tproduce(base: any, recipe?: any, patchListener?: any) {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\" && typeof recipe !== \"function\") {\n\t\t\tconst defaultBase = recipe\n\t\t\trecipe = base\n\n\t\t\tconst self = this\n\t\t\treturn function curriedProduce(\n\t\t\t\tthis: any,\n\t\t\t\tbase = defaultBase,\n\t\t\t\t...args: any[]\n\t\t\t) {\n\t\t\t\treturn self.produce(base, (draft: Drafted) => recipe.call(this, draft, ...args)) // prettier-ignore\n\t\t\t}\n\t\t}\n\n\t\tif (typeof recipe !== \"function\") die(6)\n\t\tif (patchListener !== undefined && typeof patchListener !== \"function\")\n\t\t\tdie(7)\n\n\t\tlet result\n\n\t\t// Only plain objects, arrays, and \"immerable classes\" are drafted.\n\t\tif (isDraftable(base)) {\n\t\t\tconst scope = enterScope(this)\n\t\t\tconst proxy = createProxy(this, base, undefined)\n\t\t\tlet hasError = true\n\t\t\ttry {\n\t\t\t\tresult = recipe(proxy)\n\t\t\t\thasError = false\n\t\t\t} finally {\n\t\t\t\t// finally instead of catch + rethrow better preserves original stack\n\t\t\t\tif (hasError) revokeScope(scope)\n\t\t\t\telse leaveScope(scope)\n\t\t\t}\n\t\t\tif (typeof Promise !== \"undefined\" && result instanceof Promise) {\n\t\t\t\treturn result.then(\n\t\t\t\t\tresult => {\n\t\t\t\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\t\t\t\treturn processResult(result, scope)\n\t\t\t\t\t},\n\t\t\t\t\terror => {\n\t\t\t\t\t\trevokeScope(scope)\n\t\t\t\t\t\tthrow error\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\treturn processResult(result, scope)\n\t\t} else {\n\t\t\tresult = recipe(base)\n\t\t\tif (result === NOTHING) return undefined\n\t\t\tif (result === undefined) result = base\n\t\t\tif (this.autoFreeze_) freeze(result, true)\n\t\t\treturn result\n\t\t}\n\t}\n\n\tproduceWithPatches(arg1: any, arg2?: any, arg3?: any): any {\n\t\tif (typeof arg1 === \"function\") {\n\t\t\treturn (state: any, ...args: any[]) =>\n\t\t\t\tthis.produceWithPatches(state, (draft: any) => arg1(draft, ...args))\n\t\t}\n\n\t\tlet patches: Patch[], inversePatches: Patch[]\n\t\tconst nextState = this.produce(arg1, arg2, (p: Patch[], ip: Patch[]) => {\n\t\t\tpatches = p\n\t\t\tinversePatches = ip\n\t\t})\n\t\treturn [nextState, patches!, inversePatches!]\n\t}\n\n\tcreateDraft<T extends Objectish>(base: T): Draft<T> {\n\t\tif (!isDraftable(base)) die(8)\n\t\tconst scope = enterScope(this)\n\t\tconst proxy = createProxy(this, base, undefined)\n\t\tproxy[DRAFT_STATE].isManual_ = true\n\t\tleaveScope(scope)\n\t\treturn proxy as any\n\t}\n\n\tfinishDraft<D extends Draft<any>>(\n\t\tdraft: D,\n\t\tpatchListener?: PatchListener\n\t): D extends Draft<infer T> ? T : never {\n\t\tconst state: ImmerState = draft && draft[DRAFT_STATE]\n\t\tif (__DEV__) {\n\t\t\tif (!state || !state.isManual_) die(9)\n\t\t\tif (state.finalized_) die(10)\n\t\t}\n\t\tconst {scope_: scope} = state\n\t\tusePatchesInScope(scope, patchListener)\n\t\treturn processResult(undefined, scope)\n\t}\n\n\t/**\n\t * Pass true to automatically freeze all copies created by Immer.\n\t *\n\t * By default, auto-freezing is disabled in production.\n\t */\n\tsetAutoFreeze(value: boolean) {\n\t\tthis.autoFreeze_ = value\n\t}\n\n\t/**\n\t * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n\t * always faster than using ES5 proxies.\n\t *\n\t * By default, feature detection is used, so calling this is rarely necessary.\n\t */\n\tsetUseProxies(value: boolean) {\n\t\tif (!hasProxies) {\n\t\t\tdie(20)\n\t\t}\n\t\tthis.useProxies_ = value\n\t}\n\n\tapplyPatches(base: Objectish, patches: Patch[]) {\n\t\t// If a patch replaces the entire state, take that replacement as base\n\t\t// before applying patches\n\t\tlet i: number\n\t\tfor (i = patches.length - 1; i >= 0; i--) {\n\t\t\tconst patch = patches[i]\n\t\t\tif (patch.path.length === 0 && patch.op === \"replace\") {\n\t\t\t\tbase = patch.value\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\tconst applyPatchesImpl = getPlugin(\"Patches\").applyPatches_\n\t\tif (isDraft(base)) {\n\t\t\t// N.B: never hits if some patch a replacement, patches are never drafts\n\t\t\treturn applyPatchesImpl(base, patches)\n\t\t}\n\t\t// Otherwise, produce a copy of the base state.\n\t\treturn this.produce(base, (draft: Drafted) =>\n\t\t\tapplyPatchesImpl(draft, patches.slice(i + 1))\n\t\t)\n\t}\n}\n\nexport function createProxy<T extends Objectish>(\n\timmer: Immer,\n\tvalue: T,\n\tparent?: ImmerState\n): Drafted<T, ImmerState> {\n\t// precondition: createProxy should be guarded by isDraftable, so we know we can safely draft\n\tconst draft: Drafted = isMap(value)\n\t\t? getPlugin(\"MapSet\").proxyMap_(value, parent)\n\t\t: isSet(value)\n\t\t? getPlugin(\"MapSet\").proxySet_(value, parent)\n\t\t: immer.useProxies_\n\t\t? createProxyProxy(value, parent)\n\t\t: getPlugin(\"ES5\").createES5Proxy_(value, parent)\n\n\tconst scope = parent ? parent.scope_ : getCurrentScope()\n\tscope.drafts_.push(draft)\n\treturn draft\n}\n\nexport function markChanged(immer: Immer, state: ImmerState) {\n\tif (immer.useProxies_) {\n\t\tmarkChangedProxy(state)\n\t} else {\n\t\tgetPlugin(\"ES5\").markChangedES5_(state)\n\t}\n}\n","import {\n\tIProduce,\n\tIProduceWithPatches,\n\tImmer,\n\tDraft,\n\tImmutable\n} from \"./internal\"\n\nexport {\n\tDraft,\n\tImmutable,\n\tPatch,\n\tPatchListener,\n\toriginal,\n\tisDraft,\n\tisDraftable,\n\tNOTHING as nothing,\n\tDRAFTABLE as immerable\n} from \"./internal\"\n\nconst immer = new Immer()\n\n/**\n * The `produce` function takes a value and a \"recipe function\" (whose\n * return value often depends on the base state). The recipe function is\n * free to mutate its first argument however it wants. All mutations are\n * only ever applied to a __copy__ of the base state.\n *\n * Pass only a function to create a \"curried producer\" which relieves you\n * from passing the recipe function every time.\n *\n * Only plain objects and arrays are made mutable. All other objects are\n * considered uncopyable.\n *\n * Note: This function is __bound__ to its `Immer` instance.\n *\n * @param {any} base - the initial state\n * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n * @param {Function} patchListener - optional function that will be called with all the patches produced here\n * @returns {any} a new state, or the initial state if nothing was modified\n */\nexport const produce: IProduce = immer.produce\nexport default produce\n\n/**\n * Like `produce`, but `produceWithPatches` always returns a tuple\n * [nextState, patches, inversePatches] (instead of just the next state)\n */\nexport const produceWithPatches: IProduceWithPatches = immer.produceWithPatches.bind(\n\timmer\n)\n\n/**\n * Pass true to automatically freeze all copies created by Immer.\n *\n * By default, auto-freezing is disabled in production.\n */\nexport const setAutoFreeze = immer.setAutoFreeze.bind(immer)\n\n/**\n * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n * always faster than using ES5 proxies.\n *\n * By default, feature detection is used, so calling this is rarely necessary.\n */\nexport const setUseProxies = immer.setUseProxies.bind(immer)\n\n/**\n * Apply an array of Immer patches to the first argument.\n *\n * This function is a producer, which means copy-on-write is in effect.\n */\nexport const applyPatches = immer.applyPatches.bind(immer)\n\n/**\n * Create an Immer draft from the given base state, which may be a draft itself.\n * The draft can be modified until you finalize it with the `finishDraft` function.\n */\nexport const createDraft = immer.createDraft.bind(immer)\n\n/**\n * Finalize an Immer draft from a `createDraft` call, returning the base state\n * (if no changes were made) or a modified copy. The draft must *not* be\n * mutated afterwards.\n *\n * Pass a function as the 2nd argument to generate Immer patches based on the\n * changes that were made.\n */\nexport const finishDraft = immer.finishDraft.bind(immer)\n\n/**\n * This function is actually a no-op, but can be used to cast an immutable type\n * to an draft type and make TypeScript happy\n *\n * @param value\n */\nexport function castDraft<T>(value: T): Draft<T> {\n\treturn value as any\n}\n\n/**\n * This function is actually a no-op, but can be used to cast a mutable type\n * to an immutable type and make TypeScript happy\n * @param value\n */\nexport function castImmutable<T>(value: T): Immutable<T> {\n\treturn value as any\n}\n\nexport {Immer}\n\nexport {enableES5} from \"./plugins/es5\"\nexport {enablePatches} from \"./plugins/patches\"\nexport {enableMapSet} from \"./plugins/mapset\"\nexport {enableAllPlugins} from \"./plugins/all\"\n","// Should be no imports here!\n\n// Some things that should be evaluated before all else...\n\n// We only want to know if non-polyfilled symbols are available\nconst hasSymbol =\n\ttypeof Symbol !== \"undefined\" && typeof Symbol(\"x\") === \"symbol\"\nexport const hasMap = typeof Map !== \"undefined\"\nexport const hasSet = typeof Set !== \"undefined\"\nexport const hasProxies =\n\ttypeof Proxy !== \"undefined\" &&\n\ttypeof Proxy.revocable !== \"undefined\" &&\n\ttypeof Reflect !== \"undefined\"\n\n/* istanbul ignore next */\nfunction mini() {}\nexport const isMinified = mini.name !== \"mini\"\n\n/**\n * The sentinel value returned by producers to replace the draft with undefined.\n */\nexport const NOTHING: Nothing = hasSymbol\n\t? Symbol(\"immer-nothing\")\n\t: ({[\"immer-nothing\"]: true} as any)\n\n/**\n * To let Immer treat your class instances as plain immutable objects\n * (albeit with a custom prototype), you must define either an instance property\n * or a static property on each of your custom classes.\n *\n * Otherwise, your class instance will never be drafted, which means it won't be\n * safe to mutate in a produce callback.\n */\nexport const DRAFTABLE: unique symbol = hasSymbol\n\t? Symbol(\"immer-draftable\")\n\t: (\"__$immer_draftable\" as any)\n\nexport const DRAFT_STATE: unique symbol = hasSymbol\n\t? Symbol(\"immer-state\")\n\t: (\"__$immer_state\" as any)\n\n// Even a polyfilled Symbol might provide Symbol.iterator\nexport const iteratorSymbol: typeof Symbol.iterator =\n\t(typeof Symbol != \"undefined\" && Symbol.iterator) || (\"@@iterator\" as any)\n\n/** Use a class type for `nothing` so its type is unique */\nexport class Nothing {\n\t// This lets us do `Exclude<T, Nothing>`\n\t// @ts-ignore\n\tprivate _!: unique symbol\n}\n","import {PRIMARY_STATISTICS} from '../constants';\nimport {capitalize, getStatistic} from '../utils/commonfunctions';\n\nimport {FilterIcon} from '@primer/octicons-v2-react';\nimport classnames from 'classnames';\nimport equal from 'fast-deep-equal';\nimport produce from 'immer';\nimport React, {useCallback, useRef, lazy} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useIsVisible} from 'react-is-visible';\nimport {useTrail, animated, config} from 'react-spring';\nimport {createBreakpoint, useLocalStorage} from 'react-use';\n\nconst Row = lazy(() => import('./row' /* webpackChunkName: \"Row\" */));\n\nconst useBreakpoint = createBreakpoint({S: 768});\n\nfunction PureStateHeaderCell({handleSort, sortData, statistic}) {\n  const breakpoint = useBreakpoint();\n  const {t} = useTranslation();\n\n  return (\n    <div className=\"cell heading\" onClick={() => handleSort(statistic)}>\n      {sortData.sortColumn === statistic && (\n        <div\n          className={classnames('sort-icon', {\n            invert: sortData.isAscending,\n          })}\n        >\n          <FilterIcon size={10} />\n        </div>\n      )}\n      <div\n        className={classnames({\n          [`is-${statistic}`]: breakpoint === 'S',\n        })}\n        title={capitalize(statistic)}\n      >\n        {breakpoint === 'S'\n          ? capitalize(statistic.slice(0, 1))\n          : t(capitalize(statistic))}\n      </div>\n    </div>\n  );\n}\n\nconst isStateHeaderCellEqual = (prevProps, currProps) => {\n  if (!equal(prevProps.sortData, currProps.sortData)) {\n    return false;\n  } else {\n    return true;\n  }\n};\n\nconst StateHeaderCell = React.memo(PureStateHeaderCell, isStateHeaderCellEqual);\n\nfunction PureFineprintTop() {\n  const {t} = useTranslation();\n\n  return (\n    <React.Fragment>\n      <h5 className=\"text\">\n        {t('Model v1.1740')}.{t(' Predictions are updated everyday')}\n        <br />\n        {t('Recovered and Deceased are statically computed.')}\n        {/* <Link to=\"/about\" style={{color: '#6c757d'}}>\n          {t('know more')}!\n        </Link> */}\n      </h5>\n    </React.Fragment>\n  );\n}\nconst FineprintTop = React.memo(PureFineprintTop);\n\nfunction Table({data, regionHighlighted, setRegionHighlighted}) {\n  const {t} = useTranslation();\n  const [sortData, setSortData] = useLocalStorage('sortData', {\n    sortColumn: 'confirmed',\n    isAscending: false,\n  });\n\n  const handleSortClick = useCallback(\n    (statistic) => {\n      setSortData(\n        produce(sortData, (draftSortData) => {\n          draftSortData.isAscending = !sortData.isAscending;\n          draftSortData.sortColumn = statistic;\n        })\n      );\n    },\n    [sortData, setSortData]\n  );\n\n  const sortingFunction = useCallback(\n    (stateCodeA, stateCodeB) => {\n      if (sortData.sortColumn !== 'stateName') {\n        const statisticA = getStatistic(\n          data[stateCodeA],\n          'total',\n          sortData.sortColumn\n        );\n        const statisticB = getStatistic(\n          data[stateCodeB],\n          'total',\n          sortData.sortColumn\n        );\n        return sortData.isAscending\n          ? statisticA - statisticB\n          : statisticB - statisticA;\n      } else {\n        return sortData.isAscending\n          ? stateCodeA.localeCompare(stateCodeB)\n          : stateCodeB.localeCompare(stateCodeA);\n      }\n    },\n    [sortData, data]\n  );\n\n  const [trail, set] = useTrail(2, () => ({\n    transform: 'translate3d(0, 10px, 0)',\n    opacity: 0,\n    config: config.wobbly,\n  }));\n\n  set({transform: 'translate3d(0, 0px, 0)', opacity: 1});\n\n  const tableElement = useRef();\n  const isVisible = useIsVisible(tableElement);\n\n  return (\n    <React.Fragment>\n      <animated.div className=\"fineprint\" style={trail[0]}>\n        <FineprintTop />\n      </animated.div>\n\n      <animated.div className=\"table\" style={trail[1]}>\n        <div className=\"row heading\">\n          <div\n            className=\"cell heading\"\n            onClick={() => handleSortClick('stateName')}\n          >\n            <div>{t('State/UT')}</div>\n            {sortData.sortColumn === 'stateName' && (\n              <div\n                className={classnames('sort-icon', {\n                  invert: !sortData.isAscending,\n                })}\n              >\n                <FilterIcon size={10} />\n              </div>\n            )}\n          </div>\n\n          {PRIMARY_STATISTICS.map((statistic) => (\n            <StateHeaderCell\n              key={statistic}\n              {...{statistic, sortData}}\n              handleSort={() => {\n                handleSortClick(statistic);\n              }}\n            />\n          ))}\n        </div>\n\n        {Object.keys(data)\n          .filter(\n            (stateCode) =>\n              stateCode !== 'TT' &&\n              data[stateCode] &&\n              data[stateCode].total?.confirmed\n          )\n          .sort((a, b) => sortingFunction(a, b))\n          .slice(0, isVisible ? Object.keys(data).length - 1 : 10)\n          .map((stateCode) => {\n            return (\n              <Row\n                key={stateCode}\n                data={data[stateCode]}\n                {...{stateCode, regionHighlighted, setRegionHighlighted}}\n              />\n            );\n          })}\n\n        {!isVisible && (\n          <span className=\"intersection\" ref={tableElement}></span>\n        )}\n\n        <Row\n          key={'TT'}\n          data={data['TT']}\n          stateCode={'TT'}\n          {...{regionHighlighted, setRegionHighlighted}}\n        />\n      </animated.div>\n    </React.Fragment>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (\n    !equal(\n      prevProps.regionHighlighted.districtName,\n      currProps.regionHighlighted.districtName\n    )\n  ) {\n    return false;\n  } else if (\n    !equal(\n      prevProps.regionHighlighted.stateCode,\n      currProps.regionHighlighted.stateCode\n    )\n  ) {\n    return false;\n  } else if (\n    !equal(\n      prevProps.data['TT'].total.confirmed,\n      currProps.data['TT'].total.confirmed\n    )\n  ) {\n    return false;\n  } else return true;\n};\n\nexport default React.memo(Table, isEqual);\n","/* eslint-disable */\nimport { useEffect, useState, useMemo } from 'react';\nvar createBreakpoint = function (breakpoints) {\n    if (breakpoints === void 0) { breakpoints = { laptopL: 1440, laptop: 1024, tablet: 768 }; }\n    return function () {\n        var _a = useState(0), screen = _a[0], setScreen = _a[1];\n        useEffect(function () {\n            var setSideScreen = function () {\n                setScreen(window.innerWidth);\n            };\n            setSideScreen();\n            window.addEventListener('resize', setSideScreen);\n            return function () {\n                window.removeEventListener('resize', setSideScreen);\n            };\n        });\n        var sortedBreakpoints = useMemo(function () { return Object.entries(breakpoints).sort(function (a, b) { return (a[1] >= b[1] ? 1 : -1); }); }, [\n            breakpoints,\n        ]);\n        var result = sortedBreakpoints.reduce(function (acc, _a) {\n            var name = _a[0], width = _a[1];\n            if (screen >= width) {\n                return name;\n            }\n            else {\n                return acc;\n            }\n        }, sortedBreakpoints[0][0]);\n        return result;\n    };\n};\nexport default createBreakpoint;\n"],"sourceRoot":""}